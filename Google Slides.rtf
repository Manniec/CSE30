{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Interview Process:\
- Coding Sample & Survey (quick way to sample if you know how to code, ~90 min to complete)\
- 1-2 Phone Interviews (45 technical phone interviews)\
- 5 Onsite Interviews (4-45 min onsite interviews and 1 google interview w lunch)\
- Committee Review (highering committee)\
- offer\
\
Tech industry open applications previous summer (be ready before senior year starts)\
- project matched around may or june \
\
Intern Process:\
- coding sample and survey\
- 2 phone interviews\
- committee review\
- engineering review and host match\
- offer (3+ months)\
\
Snapshot survey& Online Coding Sample\
- no cheating (flagged for a few years)\
- Coding (Java, C++, Python, JavaScript, Go Methods classes)\
- Algorithms (Sorting, Searching, Traversals, Big O Analysis, Recursion)\
 - Data Structures (Lists, Stacks/queues, Trees/graphs, Sets, Hashes/maps, Heaps)\
\
\
Interview Assessment \
Recruiter:\
- read all emails from top to bottom\
- read all the way through the email\
- respond in a timely manner\
- 10am to 4pm on business days\
- Reach out to them (make sure they don\'92t forget about you)\
- offer extensions (especially if you apply for more than one)\
\
Balancing Offers:\
- non negotiable interns\
- full time roles are negotiable (expect to negotiate)\
- thank you for the opportunity and do research on if the offer is a good salary etc. (levels.fyi lvl3 and glass door)\
- Only time they take away offer -> if you already accepted another offer\
- Best time to ask for more money -> when they try to close you\
- full time roles -> APPLY AUGUST/OCTOBER\
- Best chance if apply as soon as open\
- google.com/students\
\
Resume:\
- minimum qualifications -> Data structures and Algorithms CLEARLY SHOW YOU KNOW IT\
- resume should clearly meet minimum qualifications and preferred qualifications\
- let them know what applicable skills you know\
- Where have you coded before? (Complete projects outside of class, pioratize independent projects and extracurriculars and hackathons) -> show that you have applied your learning elsewhere\
- how much does GPA matter -> Dont need a 4.0! Its important to have good grades on paper in classes that really matter to you major. its okay if your grades are not perfect. Make sure you have active links to where you projects and code live \
- make sure you have samples of your work somewhere they can look at it (show them the work you have) \
- Make sure you put when your expected to graduate too\
- Big chunk of resume is projects: Say you have 3 projects, you need built points explaining what your project is trying to accomplish (game built in class & developed? have some information for them to understand what it is your trying to built + a link to that project)\
- Good projects don\'92t need to be complete\
- if you have a design doc of what you want it to be some day that\'92s okie\
- document your code!! (good code documentation, design docs, comments)\
- LIST PROJECTS (how many projects do you have listed?)\
- self starting experience (Anytime you describe self study or projects its important)\
- APPLY WHAT YOUR LEARNING IN CLASS TO PROJECTS OUTSIDE OF CLASS\
- if your work experience has nothing to do with what your applying to, but it to the bottom. Hackathons and independent projects are important. Dont have that-> dont get past the resume stage.\
- Reason project work is important is that if your a student and submit your resume to a recruiter (2 ppl w same credentials, how does a recruiter know who is the best canidate based on courses?). Help filter you and match you with a team that does work that\'92s important to you. (its how you get on a team that you are interested in)\
- facebook, oracle, adobe, twitter -> what differentiates a candidate? -> demonstrating an interest in CS out side of class. (Online coding competitions, kickstart, hash code, code jam) g.co/codingcompetitions\
\
\
\
\
Coding interviews:\
- 25 to 30 minutes to solve that problem (usually a data structures of algorithm problem) \
- acknowledge you know that you have more than one way to solve it and ask question so they can help you (establish parameters, and state assumptions to make sure your pursuing the right line of though)\
- sometimes you don\'92t completely finish but if you thoroughly demonstrate you know it that it doesn\'92t matter.\
- state you could do it more than one way to let them know you know this stuff.\
- A good interview should feel like a conversation not a monologue\
- demonstrate you are a good problem solver, you know how to think about a problem, dont just find the best solution, but they are looking for a good team mate (someone who can communicate well about their ideas) \
- you get good at that through practice (practice this genre of coding on a whiteboard)\
- Googlyness interview (new this year, non technical, leadership, communication skills, do you thrive in ambiguity, can you take a situation where your not sure what to do and show leadership)\
	- tell me about a time when you blah blah blah)\
- culturally how would you fit in\
- Be willing to ask questions in front of people you don\'92t know! Willingness to fail is important \
- don\'92t be afraid of standing up and saying their opinion and then getting shot down \
- Job search (Please understand its not common to get the first job you apply to)\
- Persistence PUT YOURSELF OUT THERE AND APPLY. Tolerate someone telling you no and not now\
- ubiquitous experience-> company of people who all got rejected together\
- Expect to try again! \
- Most work is done in small teams -> people who clearly play well with others! not a lot of ego around their work-> dont think of structure as hierarchical (open and humble)\
- Volunteer or mentor other people is a good sign of those things\
- Interest in something specific mostly helps in project matching stage (CLOUD, do you have any experience in it? , doesn\'92t really help in application process tho)\
- T shaped applicant (good solid understanding of basics, Know at least one of them really really well. More important than having a specialty. Theres always hot topics , Cloud, data science, Ai)\
\
STEP:\
- elegable if you are graduating 22/23. (not expected for data structures and algorithms, need to be enrolled in 2 cse courses)\
- want to see if you are passionate/if you have mentored other people\
- what are you doing to help other pple/students understand\
- Join a CS Club at you school!! -> resume builder, not hard to do, usually mentoring experience comes from those clubs\
- Faculty! go to office hours, lots of opportunities that they might know about\
- Computer Science -> basically a lifetime of self taught learning (everything changes so fast)\
\
SCHOLARSHIPS OPEN!\
\
\
\
\
\
\
\
\
}